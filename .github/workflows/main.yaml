name: Build, Test and Publish

on:
  merge_group:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            **/setup.cfg
            **/requirements*.txt
            **/test-requirements*.txt

      - name: Install dependencies
        run: pip install -r test-requirements.txt --upgrade pip

      - if: matrix.python-version == '3.10'
        name: Run Flake8
        run: flake8 . --count --show-source --statistics

      - if: matrix.python-version == '3.10'
        name: Run Black
        run: black . --check

      - if: matrix.python-version == '3.10'
        name: Run isort
        run: isort . --profile black --diff --check-only

      - if: matrix.python-version == '3.10'
        name: Run autoflake
        run: autoflake --exclude=__init__.py --remove-unused-variables --remove-all-unused-imports --quiet --check-diff --recursive .

      - name: Run tests and collect coverage
        run: pytest --cov-fail-under 60 --cov openfga_sdk

      - if: matrix.python-version == '3.10'
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: openfga/python-sdk

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test]

    permissions:
      id-token: write # Required for PyPI trusted publishing

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            **/setup.cfg
            **/requirements*.txt
            **/test-requirements*.txt

      - name: Install dependencies
        run: pip install -r test-requirements.txt --upgrade pip

      - name: Build package
        run: |
          pip install setuptools wheel
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@897895f1e160c830e369f9779632ebc134688e1b # v1.10.2

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [publish]

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - uses: Roang-zero1/github-create-release-action@57eb9bdce7a964e48788b9e78b5ac766cb684803 # v3.0.1
        with:
          version_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
